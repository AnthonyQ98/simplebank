# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Deploy to production

on:
  push:
    branches: [ "master" ]


permissions:  # ðŸ‘ˆ Required for OIDC authentication
  id-token: write
  contents: read

jobs:
  deploy:
    name: Build image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Install kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: "v1.21.3"
        id: install

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::331038362896:role/github-ci
          aws-region: eu-west-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Load secrets and save to app.env
        run: aws secretsmanager get-secret-value --secret-id simple_bank --region us-east-1 --query SecretString --output text | jq 'to_entries|map("\(.key)=\(.value)")|.[]' -r > app.env

      - name: Build, tag, and push docker image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: simplebank
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
          docker push -a $ECR_REGISTRY/$ECR_REPOSITORY

      - name: Update kube config
        run: aws eks update-kubeconfig --name simple-bank-eks --region eu-west-1

      #- name: Deploy image to Amazon EKS
      #  run: |
      #   kubectl apply -f eks/aws-auth.yaml
      #   kubectl apply -f eks/deployment.yaml
      #   kubectl apply -f eks/service.yaml
      #   kubectl apply -f eks/issuer.yaml
      #   kubectl apply -f eks/ingress.yaml
